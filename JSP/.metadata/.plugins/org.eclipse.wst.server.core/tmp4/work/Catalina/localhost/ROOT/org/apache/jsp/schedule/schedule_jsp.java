/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.100
 * Generated at: 2024-04-03 02:49:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.schedule;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Calendar.DTO.Calendar;
import java.util.List;
import Calendar.Service.CalendarServiceImpl;
import Calendar.Service.CalendarService;
import Calendar.MyCalendar;
import java.util.Date;

public final class schedule_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1711692764518L));
    _jspx_dependants.put("jar:file:/C:/JSLEE/JAVA/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/theJoeunUniversity/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/JSLEE/JAVA/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/theJoeunUniversity/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/sql.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/JSLEE/JAVA/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/theJoeunUniversity/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/C:/JSLEE/JAVA/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp4/wtpwebapps/theJoeunUniversity/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Calendar.DTO.Calendar");
    _jspx_imports_classes.add("Calendar.Service.CalendarService");
    _jspx_imports_classes.add("Calendar.Service.CalendarServiceImpl");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("Calendar.MyCalendar");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>학사 일정</title>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/link.jsp", out, false);
      out.write("\r\n");
      out.write("	<link href=\"");
      out.print( request.getContextPath());
      out.write("/schedule/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	// 년, 월 받아오기
	Date date = new Date();
	int year = date.getYear() +1900;
	int month = date.getMonth() +1;
				
	//	오류사항 걸러주기	
	try{
		year = Integer.parseInt(request.getParameter("year"));
		month = Integer.parseInt(request.getParameter("month"));
						
		if(month>=13){
			year++;
			month =1;
		}else if(month <=0){
			year--;
			month =12;
		}
	}catch(Exception e){
		e.printStackTrace();
	}
	
	CalendarService calendarService = new CalendarServiceImpl();
	List<Calendar> calendarList = calendarService.list();

      out.write("\r\n");
      out.write("	<!-- 헤더 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- 컨텐츠 -->\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<h1>학사 일정</h1>\r\n");
      out.write("		<div class=\"months\">\r\n");
      out.write("			<div class=\"select\">\r\n");
      out.write("				<input type=\"button\" value=\"이전 달\" class=\"selectbtn\" onclick=\"location.href='?year=");
      out.print(year);
      out.write("&month=");
      out.print(month-1);
      out.write("'\">\r\n");
      out.write("					<span id=\"year\">");
      out.print(year);
      out.write("년 학사일정</span>\r\n");
      out.write("				<input type=\"button\" value=\"다음 달\" class=\"selectbtn\" onclick=\"location.href='?year=");
      out.print(year);
      out.write("&month=");
      out.print(month+1);
      out.write("'\">\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"calendar\">\r\n");
      out.write("			<!-- 달력 출력 -->\r\n");
      out.write("			<table width=\"700\" align=\"center\" cellpadding=\"5\" cellspacing=\"0\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th id=\"title\" colspan=\"7\">\r\n");
      out.write("						");
      out.print(month);
      out.write("월\r\n");
      out.write("					</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<!-- 요일 표시 -->\r\n");
      out.write("				<tr id=\"weekend\">\r\n");
      out.write("					<td class=\"sunday\">일</td>\r\n");
      out.write("					<td class=\"etcday\">월</td>\r\n");
      out.write("					<td class=\"etcday\">화</td>\r\n");
      out.write("					<td class=\"etcday\">수</td>\r\n");
      out.write("					<td class=\"etcday\">목</td>\r\n");
      out.write("					<td class=\"etcday\">금</td>\r\n");
      out.write("					<td class=\"saturday\">토</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("				");

					//	1일의 요일을 계산
					int first = MyCalendar.weekDay(year, month, 1);
					// 해당 월의 전 달의 마지막 날짜의 시작일 계산
					int start = month == 1? MyCalendar.lastDay(year-1, 12)- first : MyCalendar.lastDay(year, month-1)- first;
			
					// 1일 출력 위치를 맞추기 위해 위치 만큼 빈칸을 반복
					for(int i= 1; i<= first; i++){
						if(i==1){
							out.println("<td></td>");
						}else{
							out.println("<td></td>");
						}
					}
			
					// 1일부터 마지막 날까지 반복해 날짜 출력
					for(int i = 1; i <= MyCalendar.lastDay(year, month); i++){
						// 요일 출력
						switch(MyCalendar.weekDay(year, month, i)){
							case 0 :
								// 일요일
								out.println("<td class='sun'>" +i +"</td>");
								break;
							case 6 :
								// 토요일
								out.println("<td class='sat'>" +i +"</td>");
								break;
							default :
								// 평일
								out.println("<td>" + i +"</td>");
								break;
						}
						// 출력한 날짜가 토요일이면서 마지막 달이면 줄바꿈
						if(MyCalendar.weekDay(year, month, i) == 6 && i != MyCalendar.lastDay(year, month)){
							out.println("</tr><tr>");			
						}
					}
					// if(MyCalendar.weekDay(year, month, MyCalendar.lastDay(year, month)) !=6){
					// 	for(int i = MyCalendar.weekDay(year, month, MyCalendar.lastDay(year, month))+1; i < 7; i++){
					//		out.println("<td></td>");	
					//	}
					// }
				
      out.write("\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"info\">\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 푸터 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- 스크립트 -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
