package controller;

import java.io.IOException;
import java.util.Map;
import java.util.Set;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import Board.Controller.BoardInsertController;
import Board.Controller.BoardListController;
import Board.Controller.BoardReadController;

/**
 * Servlet implementation class FrontController
 */
@WebServlet("*.do")
public class FrontController extends HttpServlet{
	private static final long serialVersionUID = 1L;

	public FrontController() {
		super();
	}
	
	@Override		// doGet() : GET 메소드 방식으로 요청이 올때 실행되는 메소드
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// jsp 응답 하기
		String view = "index.jsp";
		boolean redirect = false;
		ModelView modelView = null;
		
		String requsetURI = request.getRequestURI();
		String pathInfo = request.getPathInfo();
		StringBuffer requestURL = request.getRequestURL();
		System.out.println("요청 URI : " + requsetURI);
		System.out.println("requestURL : " + requestURL);
		System.out.println("pathInfo : " + pathInfo);
		
		// 컨트롤로 선택
		// 목록
		if(requsetURI.contains("/board/list.do")) {
			BoardListController BoardListController = new BoardListController();
			try { view = BoardListController.process(request); } 
			catch (Exception e) { e.printStackTrace(); }		
		}
		// 조회
		if(requsetURI.contains("/board/read.do")) {
			BoardReadController BoardReadController = new BoardReadController();
			try { view = BoardReadController.process(request); } 
			catch (Exception e) { e.printStackTrace(); }		
		}
		// 삽입
		if(requsetURI.contains("/board/insert.do")) {
			BoardInsertController BoardInsertController = new BoardInsertController();
			try { view = BoardInsertController.process(request); } 
			catch (Exception e) { e.printStackTrace(); }		
		}
		if(requsetURI.contains("/board/insertPro.do")) {
			BoardInsertController BoardInsertController = new BoardInsertController();
			try { view = BoardInsertController.process(request); } 
			catch (Exception e) { e.printStackTrace(); }		
		}
		// 수정
		
		// 삭제
		
		// 모델 등록
		// createModel(modelView, request);
		
		// 페이지 이동
		// redirect
		// forword
		if(redirect == true) {
			response.sendRedirect(request.getContextPath() + view);
		}else {
			RequestDispatcher dispatcher = request.getRequestDispatcher(view);
			dispatcher.forward(request, response);
		}
	}

	@Override		// doPost() : POST 메소드 방식으로 요청이 올때 실행되는 메소드
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}
	
	/**
	 * 모델 등록 메소드
	 * @param modelView
	 * @param request
	 */
	public void createModel(ModelView modelView, HttpServletRequest request) {
		if(modelView == null) return;
			Map<String, Object> model = modelView.getModel();
		
		if(model == null) return;
		
		Set<String> ketSet = model.keySet();
		for (String key : ketSet) {
			Object value = model.get(key);
			request.setAttribute(key, value);
		}
	}
}